name: CI

on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - "main"

env:
  COOKIE_NAME: ${{ secrets.COOKIE_NAME }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  NODE_ENV: production
  RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
  RESEND_FROM_EMAIL: ${{ secrets.RESEND_FROM_EMAIL }}
  SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
  UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_REDIS_REST_TOKEN }}
  UPSTASH_REDIS_REST_URL: ${{ secrets.UPSTASH_REDIS_REST_URL }}
  URL: ${{ secrets.URL }}
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

jobs:
  build:
    runs-on: ubuntu-latest

    name: Build and lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4.0.0
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: "pnpm"

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Generate Prisma Client
        run: pnpm turbo db:generate

      - name: Build, check lint, and check types
        run: pnpm turbo build lint typecheck

      - name: Check manypkg
        run: pnpm manypkg:check
